HashSet - its an class which implements the Set interface
		* it uses a hash table for storage.
		* HashSet stores the elements by using a mechanism called hashing.
		* HashSet contains unique elements only.
		* The HashSet object allows null values but, you can add only one null element to it.
		* HashSet class is non synchronized.
		* HashSet doesn't maintain the insertion order.
		* elements are inserted on the basis of their hashcode.
		* HashSet is the best approach for search operations.
		* The initial default capacity of HashSet is 16, and the load factor is 0.75. 
		* size will increase 0.75 of the current size of hash table

"HashSet.java"

  static final long serialVersionUID;
  public java.util.HashSet();
  public java.util.HashSet(java.util.Collection<? extends E>);
  public java.util.HashSet(int, float);
  public java.util.HashSet(int);
  java.util.HashSet(int, float, boolean);
  public java.util.Iterator<E> iterator();
  public int size();
  public boolean isEmpty();
  public boolean contains(java.lang.Object);
  public boolean add(E);
  public boolean remove(java.lang.Object);
  public void clear();
  public java.lang.Object clone();
  public java.util.Spliterator<E> spliterator();
  public java.lang.Object[] toArray();
  public <T> T[] toArray(T[]);
  static {};

Constructor and Description

HashSet() - Constructs a new, empty set;
		  - the backing HashMap instance has default initial capacity (16) and load factor (0.75).

HashSet(Collection<? extends E> c) - Constructs a new set containing the elements in the specified collection.

HashSet(int initialCapacity) - Constructs a new, empty set; 
							 - the backing HashMap instance has the specified initial capacity and default load factor (0.75).
							 
HashSet(int initialCapacity, float loadFactor) - Constructs a new, empty set; 
											   - the backing HashMap instance has the specified initial capacity and the specified load factor.
  
  *******************************************************************
	HashSetEx1 - learn about constructor 
  *******************************************************************
  	HashSetEx2 - learn about the methods
  	
  	Modifier and Type	Method and Description
	
	boolean	add(E e) - Adds the specified element to this set if it is not already present.
	
	void	clear() - Removes all of the elements from this set.
	
	Object	clone() - Returns a shallow copy of this HashSet instance: the elements themselves are not cloned.
	
	boolean	contains(Object o) - Returns true if this set contains the specified element.
	
	boolean	isEmpty() - Returns true if this set contains no elements.
	
	Iterator<E>	iterator() - Returns an iterator over the elements in this set.
	
	boolean	remove(Object o) - Removes the specified element from this set if it is present.
	
	int	size() - Returns the number of elements in this set (its cardinality).
	
	Spliterator<E>	spliterator() - Creates a late-binding and fail-fast Spliterator over the elements in this set.
  
  *******************************************************************
  	HashSetEx2 - learn about the methods
  	
  	
  